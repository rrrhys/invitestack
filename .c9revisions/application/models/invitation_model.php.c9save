{"ts":1361407361492,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?\n\nclass Invitation_model extends CI_Model \n{\n\tpublic $errors = array();\n    function __construct()\n    {\n        parent::__construct();\n        $this->load->database();\n    }\n    /*function _user_owns_customer($customer_id,$owner_id){\n    \tlog_message('error', 'timeclock_model->_user_owns_customer is not implemented.');\n    \treturn true;\n    }*/\n    public function list_invitations($owner_id=false){\n      if($owner_id){\n    \t $this->db->where('owner_id',$owner_id);\n      }\n    \t$q = $this->db->get('invitations')->result_array();\n    \treturn $q;\n    }\n    public function delete_name($name_id,$invitation_id,$owner_id){\n      $this->db->where('id',$name_id);\n      //$this->db->where('owner_id',$owner_id);\n      $this->db->where('customer_invitation_id',$invitation_id);\n      $this->db->delete('customer_invitation_names');\n      return true;\n    }\n    public function add_name($name,$invitation_id,$owner_id){\n      //check the user owns this invite.\n      $this->db->where('id',$invitation_id);\n      $this->db->where('owner_id',$owner_id);\n      $invitation = $this->db->get('customer_invitations');\n      if($invitation){\n        $insert = array('customer_invitation_id'=>$invitation_id,'person_name'=>$name);\n        $this->db->insert('customer_invitation_names',$insert);\n        return $this->db->insert_id();\n        \n      }else{\n        return false;\n      }\n    }\n    public function get_generic_image_url($invitation_id,$size=\"thumb\"){\n      $web_path = $this->make_generic_image_if_not_exists($invitation_id,\"John\",date(\"dMY\"),$size);\n      return $web_path;\n    }\n    public function make_generic_image_if_not_exists($invitation_id,$invitation_name,$unique_hash=\"1\",$size=\"thumb\"){\n      $image_url =\"http://\".$_SERVER['HTTP_HOST'] . '/app/generic_invitation/' . $invitation_id . '/' . $invitation_name . '/' . $unique_hash . '/html/' . $size;\n      $filename_to_make = \"Generic_\".$invitation_id.'_'.$invitation_name.'_'.$unique_hash . $size.'.jpg';\n      $exec_string = $this->config->config['phantomjs_path'] .'/phantomjs '.$_SERVER['DOCUMENT_ROOT'] . '/test.js '.$image_url . ' \"#invitation_preview_merged\" \"'.$_SERVER['DOCUMENT_ROOT'].'/invitations/'.$filename_to_make.'\" 2>&1';\n      //echo $exec_string;\n      $web_path = \"/invitations/\".$filename_to_make;\n\n      if(!file_exists($_SERVER['DOCUMENT_ROOT'].'/invitations/'.$filename_to_make)){\n      exec($exec_string,$result);\n      //echo json_encode($result);\n      $result = implode(\"\\r\\n\", $result);\n      $result_obj = json_decode($result);\n      \n      $real_path = $result_obj->filename;\n      //echo $real_path;\n      }\n      return $web_path;\n    }\n    public function get_image_url($invitation_id,$size=\"thumb\"){\n      $web_path = $this->make_image_if_not_exists($invitation_id,\"John\",date(\"dMY\"),$size);\n      return $web_path;\n    }\n    public function make_image_if_not_exists($invitation_id,$invitation_name,$unique_hash=\"1\",$size=\"thumb\"){\n      $image_url =\"http://\".$_SERVER['HTTP_HOST'] . '/app/finished_invitation/' . $invitation_id . '/' . $invitation_name . '/' . $unique_hash . '/html/' . $size;\n      $filename_to_make = $invitation_id.'_'.$invitation_name.'_'.$unique_hash . $size.'.jpg';\n      $exec_string = $this->config->config['phantomjs_path'] .'/phantomjs '.$_SERVER['DOCUMENT_ROOT'] . '/test.js '.$image_url . ' \"#invitation_preview_merged\" \"'.$_SERVER['DOCUMENT_ROOT'].'/invitations/'.$filename_to_make.'\" 2>&1';\n      //echo $exec_string;\n      $web_path = \"/invitations/\".$filename_to_make;\n\n      if(!file_exists($_SERVER['DOCUMENT_ROOT'].'/invitations/'.$filename_to_make)){\n      exec($exec_string,$result);\n      //echo json_encode($result);\n      $result = implode(\"\\r\\n\", $result);\n      $result_obj = json_decode($result);\n      \n      $real_path = $result_obj->filename;\n      //echo $real_path;\n      }\n      return $web_path;\n    }\n    public function list_invitations_merged($owner_id=false){\n      if($owner_id){\n       $this->db->where('owner_id',$owner_id);\n      }\n      $q = $this->db->get('invitations')->result_array();\n      foreach($q as &$inv){\n         $this->db->where('invitation_id',$inv['id']);\n        $inv['fields'] = $this->db->get('invitation_fields')->result_array();\n        foreach($inv['fields'] as $f){\n          $find_string = '{' . $f['field_type'] . ':' . $f['field_name'] .'}';\n          //echo $find_string;\n         $inv['invitation_html'] = str_replace($find_string, $f['value'], $inv['invitation_html']);\n\n        }\n        $inv['image_url_thumb'] = $this->get_generic_image_url($inv['id'],\"thumb\");\n        $inv['image_url_print'] = $this->get_generic_image_url($inv['id'],\"print\");\n      }\n      return $q;\n    }\n    public function list_customer_invitations_merged($owner_id=false){\n      if($owner_id){\n       $this->db->where('owner_id',$owner_id);\n      }\n      $q = $this->db->get('customer_invitations')->result_array();\n      foreach($q as &$inv){\n         $this->db->where('invitation_id',$inv['id']);\n        $inv['fields'] = $this->db->get('customer_invitation_fields')->result_array();\n        foreach($inv['fields'] as $f){\n          $find_string = '{' . $f['field_type'] . ':' . $f['field_name'] .'}';\n          //echo $find_string;\n         $inv['invitation_html'] = str_replace($find_string, $f['value'], $inv['invitation_html']);\n        }\n\n      }\n      return $q;\n    }\n    public function list_my_invitations($owner_id){\n              if($owner_id){\n               $this->db->where('owner_id',$owner_id);\n              }\n              $q = $this->db->get('customer_invitations')->result_array();\n              return $q;\n    }\n\n\n    public function user_owns_invitation($owner_id,$invitation_id){\n      $this->db->where('owner_id',$owner_id);\n      $this->db->where('id',$invitation_id);\n      $q = $this->db->get('invitations')->result_array();\n      return count($q) == 1;\n    }\n    public function get_invitation($invitation_id){\n      $this->db->where('id',$invitation_id);\n    \t$q = $this->db->get('invitations')->row_array();\n      if($q){\n        $this->db->where('invitation_id',$q['id']);\n        $q['fields'] = $this->db->get('invitation_fields')->result_array();\n      }\n    \treturn $q;\n    }\n    public function start_invitation_from($invitation_id,$owner_id){\n      $this->db->where('id',$invitation_id);\n      $q = $this->db->get('invitations')->row_array();\n      unset($q['id']);\n      unset($q['owner_id']);\n      unset($q['long_description']);\n      $q['owner_id'] = $owner_id;\n      $q['base_id'] = $invitation_id;\n      $this->db->insert('customer_invitations',$q);\n      $new_id = $this->db->insert_id();\n\n      //insert all the fields\n      $this->db->where('invitation_id',$invitation_id);\n      $q= $this->db->get('invitation_fields')->result_array();\n      foreach($q as $field){\n        unset($field['id']);\n        $field['invitation_id'] = $new_id;\n        $this->db->insert('customer_invitation_fields',$field);\n      }\n\n      return $new_id;\n    }\n    public function get_personalised_invitation($p_id){\n      $this->db->where('id',$p_id);\n      $q = $this->db->get('customer_invitations')->row_array();\n      if($q){\n        $this->db->where('invitation_id',$p_id);\n        $q['fields'] = $this->db->get('customer_invitation_fields')->result_array();\n        $this->db->where('customer_invitation_id',$p_id);\n        $q['names'] = $this->db->get('customer_invitation_names')->result_array();\n      }\n      return $q;\n    }\n    public function update_personalised_invitation($p_id,$invitation){\n      //echo $p_id;\n      $updatable_columns = array('name','invitation_html');\n\n      $update_array = array();\n      foreach($updatable_columns as $updatable_column){\n        if(isset($invitation[$updatable_column])){\n          $update_array[$updatable_column] = $invitation[$updatable_column];\n        }\n      }\n      $this->db->where('id',$p_id);\n      $this->db->update('customer_invitations',$update_array);\n      if($invitation['fields']){\n        //user supplied some field defaults.\n        $this->db->where('invitation_id',$p_id);\n        $this->db->delete('customer_invitation_fields');\n        foreach($invitation['fields'] as $f=>$v){\n\n          $insert = array('invitation_id'=>$p_id,\n                          'field_name'=>$f,\n                          'value'=>$v['value'],\n                          'field_type'=>$v['type']);\n          $this->db->insert('customer_invitation_fields',$insert);\n        }\n        if(isset($invitation['names'])){\n          foreach($invitation['names'] as $f){\n            $insert = array('customer_invitation_id'=>$p_id,\n                            'person_name'=>$f);\n            $this->db->insert('customer_invitation_names',$insert);\n          }\n        }\n      }\n      return true;\n    }\n    public function update_invitation($invitation_id,$invitation){\n      $updatable_columns = array('name','invitation_html');\n\n    \t$update_array = array();\n      foreach($updatable_columns as $updatable_column){\n        if(isset($invitation[$updatable_column])){\n          $update_array[$updatable_column] = $invitation[$updatable_column];\n        }\n      }\n      $this->db->where('id',$invitation_id);\n      $this->db->update('invitations',$update_array);\n      if($invitation['fields']){\n        //user supplied some field defaults.\n        $this->db->where('invitation_id',$invitation_id);\n        $this->db->delete('invitation_fields');\n        foreach($invitation['fields'] as $f=>$v){\n\n          $insert = array('invitation_id'=>$invitation_id,\n                          'field_name'=>$f,\n                          'value'=>$v['value'],\n                          'field_type'=>$v['type']);\n          $this->db->insert('invitation_fields',$insert);\n        }\n      }\n      return true;\n    }\n   \tpublic function add_invitation($owner_id,$invitation){\n      $invitation['owner_id'] = $owner_id;\n      $this->db->insert('invitations',$invitation);\n      return $this->db->insert_id();\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":9940}]],"length":9940}
{"contributors":[],"silentsave":true,"ts":1361407527563,"patch":[[{"diffs":[[0,")->row_array();\n"],[1,"                $inv['image_url_thumb'] = $this->get_generic_image_url($inv['id'],\"thumb\");\n        $inv['image_url_print'] = $this->get_generic_image_url($inv['id'],\"print\");\n"],[0,"      if($q){\n  "]],"start1":5994,"start2":5994,"length1":32,"length2":208}]],"length":10116,"saved":false}
{"ts":1361407530574,"patch":[[{"diffs":[[0,"ow_array();\n"],[-1,"        "],[0,"        $inv"]],"start1":5998,"start2":5998,"length1":32,"length2":24}]],"length":10108,"saved":false}
{"ts":1361407532775,"patch":[[{"diffs":[[0,"();\n"],[-1,"        $inv['image_url_thumb'] = $this->get_generic_image_url($inv['id'],\"thumb\");\n        $inv['image_url_print'] = $this->get_generic_image_url($inv['id'],\"print\");\n"],[0,"    "]],"start1":6006,"start2":6006,"length1":176,"length2":8}]],"length":9940,"saved":false}
{"ts":1361407536392,"patch":[[{"diffs":[[0,"result_array();\n"],[1,"        $inv['image_url_thumb'] = $this->get_generic_image_url($inv['id'],\"thumb\");\n        $inv['image_url_print'] = $this->get_generic_image_url($inv['id'],\"print\");\n"],[0,"      }\n    \tret"]],"start1":6136,"start2":6136,"length1":32,"length2":200}]],"length":10108,"saved":false}
{"ts":1361407539039,"patch":[[{"diffs":[[0,"ray();\n        $"],[-1,"inv"],[1,"q"],[0,"['image_url_thum"]],"start1":6145,"start2":6145,"length1":35,"length2":33},{"diffs":[[0,"umb\");\n        $"],[-1,"inv"],[1,"q"],[0,"['image_url_prin"]],"start1":6227,"start2":6227,"length1":35,"length2":33}]],"length":10104,"saved":false}
{"ts":1361407541845,"patch":[[{"diffs":[[0,"eric_image_url($"],[-1,"inv"],[1,"q"],[0,"['id'],\"thumb\");"]],"start1":6198,"start2":6198,"length1":35,"length2":33},{"diffs":[[0,"eric_image_url($"],[-1,"inv"],[1,"q"],[0,"['id'],\"print\");"]],"start1":6278,"start2":6278,"length1":35,"length2":33}]],"length":10100,"saved":false}
